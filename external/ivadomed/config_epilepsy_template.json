{
    "command": "train",
    "gpu_ids": [0],
    "path_output": "/home/GRAMES.POLYMTL.CA/u111358/data_nvme_u111358/EEG-ivado/output_epilepsy_EEG_with_baseline",
    "model_name": "EEG_model_with_baseline",
    "debugging": true,
    "object_detection_params": {
        "object_detection_path": null,
        "safety_factor": [1.0, 1.0, 1.0]
    },
    "loader_parameters": {
        "path_data": "/home/GRAMES.POLYMTL.CA/u111358/data_nvme_u111358/EEG-ivado/data_epilepsy_EEG_with_baseline",
        "subject_selection": {"n": [], "metadata": [], "value": []},
        "target_suffix": ["_centered"],
        "roi_params": {
            "suffix": null,
            "slice_filter_roi": null
        },
        "contrast_params": {
            "training_validation": ["baselines1", "baselines2", "baselines3", "baselines4", "baselines5", "baselines6", "baselines7", "baselines8", "baselines9", "baselinesA10", "baselinesA11", "sawestdistant1", "sawestdistant2", "sawestdistant3", "sawestdistant4", "sawestdistant5", "sawestdistant6", "sawestdistant7", "sawestdistant8", "sawestdistant9", "sawestdistantA10", "sawestdistantA11", "sawestdistantA12", "sawestdistantA13", "sawestdistantA14", "sawestdistantA15", "sawestdistantA16", "sawestdistantA17", "sawestdistantA18", "sawestdistantA19", "sawestdistantB20", "sawestdistantB21", "sawestdistantB22", "sawestdistantB23", "sawestdistantB24", "sawestdistantB25", "sawestdistantB26", "sawestdistantB27", "sawestdistantB28", "sawestdistantB29", "sawestdistantC30", "sawestdistantC31", "sawestdistantC32", "sawestdistantC33", "sawestdistantC34", "sawestdistantC35", "sawestdistantC36", "sawestdistantC37", "sawestdistantC38", "sawestdistantC39", "sawestdistantD40", "sawestdistantD41", "sawestdistantD42", "sawestdistantD43", "sawestdistantD44", "sawestdistantD45", "sawestdistantD46", "sawestdistantD47", "sawestdistantD48", "sawestdistantD49", "sawestdistantE50", "sawestdistantE51", "sawestdistantE52", "sawestdistantE53", "sawestdistantE54", "sawestdistantE55", "sawestdistantE56", "sawestdistantE57", "sawestdistantE58", "sawestdistantE59", "sawestdistantF60", "sawestdistantF61", "sawestdistantF62", "sawestdistantF63"
],
            "testing": ["baselines1", "baselines2", "baselines3", "baselines4", "baselines5", "baselines6", "baselines7", "baselines8", "baselines9", "baselinesA10", "baselinesA11", "sawestdistant1", "sawestdistant2", "sawestdistant3", "sawestdistant4", "sawestdistant5", "sawestdistant6", "sawestdistant7", "sawestdistant8", "sawestdistant9", "sawestdistantA10", "sawestdistantA11", "sawestdistantA12", "sawestdistantA13", "sawestdistantA14", "sawestdistantA15", "sawestdistantA16", "sawestdistantA17", "sawestdistantA18", "sawestdistantA19", "sawestdistantB20", "sawestdistantB21", "sawestdistantB22", "sawestdistantB23", "sawestdistantB24", "sawestdistantB25", "sawestdistantB26", "sawestdistantB27", "sawestdistantB28", "sawestdistantB29", "sawestdistantC30", "sawestdistantC31", "sawestdistantC32", "sawestdistantC33", "sawestdistantC34", "sawestdistantC35", "sawestdistantC36", "sawestdistantC37", "sawestdistantC38", "sawestdistantC39", "sawestdistantD40", "sawestdistantD41", "sawestdistantD42", "sawestdistantD43", "sawestdistantD44", "sawestdistantD45", "sawestdistantD46", "sawestdistantD47", "sawestdistantD48", "sawestdistantD49", "sawestdistantE50", "sawestdistantE51", "sawestdistantE52", "sawestdistantE53", "sawestdistantE54", "sawestdistantE55", "sawestdistantE56", "sawestdistantE57", "sawestdistantE58", "sawestdistantE59", "sawestdistantF60", "sawestdistantF61", "sawestdistantF62", "sawestdistantF63"
],
            "balance": {}
        },
        "slice_filter_params": {
            "filter_empty_mask": false,
            "filter_empty_input": true
        },
        "slice_axis": "sagittal",
        "multichannel": false,
        "soft_gt": false
    },
    "split_dataset": {
        "fname_split": null,
        "random_seed": 6,
        "center_test": [],
        "method": "per_patient",
        "balance": null,
        "train_fraction": 0.6,
        "test_fraction": 0.2
    },
    "training_parameters": {
        "batch_size": 12,
        "loss": {
            "name": "DiceLoss"
        },
        "training_time": {
            "num_epochs": 100,
            "early_stopping_patience": 50,
            "early_stopping_epsilon": 0.001
        },
        "scheduler": {
            "initial_lr": 0.001,
            "lr_scheduler": {
                "name": "CosineAnnealingLR",
                "base_lr": 1e-5,
                "max_lr": 1e-2
            }
        },
        "balance_samples": {
            "applied": false,
            "type": "gt"
        },
        "mixup_alpha": null,
        "transfer_learning": {
            "retrain_model": null,
            "retrain_fraction": 1.0,
            "reset": true
        }
    },
    "default_model": {
        "name": "Unet",
        "dropout_rate": 0.3,
        "bn_momentum": 0.9,
        "depth": 3
    },
    "FiLMedUnet": {
        "applied": false,
        "metadata": "institution_id",
        "film_layers": [0, 1, 0, 0, 0, 0, 0, 0]
    },
    "Modified3DUNet": {
        "applied": true,
        "length_3D": [112, 112, 64],
        "stride_3D": [112, 112, 32],
        "attention": false,
        "n_filters": 8
    },
    "uncertainty": {
        "epistemic": false,
        "aleatoric": false,
        "n_it": 0
    },
    "postprocessing": {
        "remove_noise": {"thr": -1},
        "binarize_prediction": {"thr": 0.5},
        "uncertainty": {"thr": -1, "suffix": "_unc-vox.nii.gz"},
        "fill_holes": {},
        "remove_small": {"unit": "vox", "thr": 3}
    },
    "evaluation_parameters": {
        "target_size": {"unit": "vox", "thr": [20, 100]},
        "overlap": {"unit": "vox", "thr": 3}
    },
    "transformation": {
        "CenterCrop": {"size":  [112, 112, 512]}, 
        "RandomAffine": {
            "degrees": 0,
            "scale": [0, 0, 0.1],
            "translate": [0, 0, 0.03],
            "applied_to": ["im", "gt"],
            "dataset_type": ["training"]
        },
      "NumpyToTensor": {},
      "NormalizeInstance": {"applied_to": ["im"]}
    }
}
